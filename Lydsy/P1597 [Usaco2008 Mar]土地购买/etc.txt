一开始YY了个方程。复杂度O(n^2)。不会斜率优化。蛮交下发现WA了
不懂WA在哪。不管了。

考虑斜率优化
根据方程f[i] = min(f[j] + x[j + 1] * y[i])
首先为了方便我们先把x数组提前一下，方程就变为
f[i] = min(f[j] + x[j] * y[i])
若有j < k 且 f[j] + x[j] * y[i]) < f[k] + x[k] * y[i])，即从f[j]转移比从f[k]更优，则化简可得
y[i] < (f[k] - f[j]) / (x[j] - x[k])。
即满足该式时，从f[j]转移比从f[k]更优。
先预处理g[j,k] = (f[k] - f[j]) / (x[j] - x[k]) （斜率）


若g[j,k] > y[i]。则可以不考虑k。
那么，若有g[c,b] > g[b,a](c < b < a < i)
分情况讨论:
1.g[c,b] >= y[i] 那么，决策点c不会比b差，b不会成为决策点。
2.g[c,b] <  y[i] 那么，由于g[b,a] < g[c,b] < y[i],决策点a不会比b差，b也不会成为决策点。

综上，若g[c,b] > g[b,a]，则b不会成为决策点。
所以可以用单调队列来维护最优决策点。

