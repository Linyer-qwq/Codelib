/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 02 00:38:54 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.EmptyStackException;
import net.mooctest.LinkedStack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LinkedStack_ESTest extends LinkedStack_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedStack<String> linkedStack0 = new LinkedStack<String>();
      linkedStack0.push("");
      linkedStack0.pop();
      assertTrue(linkedStack0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedStack<String> linkedStack0 = new LinkedStack<String>();
      linkedStack0.push("net.mooctest.LinkedStack$Node");
      String string0 = linkedStack0.peek();
      assertEquals("net.mooctest.LinkedStack$Node", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LinkedStack<Object> linkedStack0 = new LinkedStack<Object>();
      boolean boolean0 = linkedStack0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedStack<String> linkedStack0 = new LinkedStack<String>();
      linkedStack0.push("net.mooctest.LinkedStack$Node");
      boolean boolean0 = linkedStack0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedStack<String> linkedStack0 = new LinkedStack<String>();
      linkedStack0.push((String) null);
      String string0 = linkedStack0.peek();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LinkedStack<String> linkedStack0 = new LinkedStack<String>();
      // Undeclared exception!
      try { 
        linkedStack0.peek();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.LinkedStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedStack<String> linkedStack0 = new LinkedStack<String>();
      // Undeclared exception!
      try { 
        linkedStack0.pop();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.LinkedStack", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LinkedStack<String> linkedStack0 = new LinkedStack<String>();
      linkedStack0.clear();
      assertTrue(linkedStack0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      LinkedStack<String> linkedStack0 = new LinkedStack<String>();
      linkedStack0.push((String) null);
      assertFalse(linkedStack0.isEmpty());
      
      linkedStack0.pop();
      assertTrue(linkedStack0.isEmpty());
  }
}
