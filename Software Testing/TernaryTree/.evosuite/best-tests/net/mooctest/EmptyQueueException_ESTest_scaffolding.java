/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sat Nov 02 00:39:38 GMT 2019
 */

package net.mooctest;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class EmptyQueueException_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "net.mooctest.EmptyQueueException"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/var/folders/sb/by8b5dmj4q7_rtl4x16g9yvw0000gn/T/"); 
    java.lang.System.setProperty("user.country", "CN"); 
    java.lang.System.setProperty("user.dir", "/Users/wycer/Codelib/Software Testing/TernaryTree"); 
    java.lang.System.setProperty("user.home", "/Users/wycer"); 
    java.lang.System.setProperty("user.language", "zh"); 
    java.lang.System.setProperty("user.name", "wycer"); 
    java.lang.System.setProperty("user.timezone", "Asia/Shanghai"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(EmptyQueueException_ESTest_scaffolding.class.getClassLoader() ,
      "net.mooctest.EmptyQueueException"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(EmptyQueueException_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "net.mooctest.EmptyQueueException",
      "org.eclipse.jdt.internal.core.search.AbstractSearchScope",
      "org.eclipse.jdt.internal.core.search.AbstractJavaSearchScope",
      "org.eclipse.jdt.internal.compiler.env.AccessRuleSet",
      "org.eclipse.jdt.internal.core.search.JavaSearchScope",
      "org.eclipse.jdt.internal.compiler.batch.ClasspathLocation",
      "org.eclipse.jdt.internal.compiler.batch.ClasspathJrt",
      "org.eclipse.jdt.internal.compiler.batch.ClasspathJep247",
      "org.eclipse.jdt.core.compiler.CharOperation",
      "org.eclipse.jdt.internal.compiler.impl.CompilerOptions",
      "org.eclipse.jdt.internal.compiler.batch.Main",
      "org.eclipse.jdt.internal.compiler.util.HashtableOfInt",
      "org.eclipse.jdt.internal.compiler.batch.Main$Logger",
      "org.eclipse.jdt.internal.compiler.impl.IrritantSet",
      "org.eclipse.jdt.internal.compiler.Compiler",
      "org.eclipse.jdt.internal.compiler.util.Util",
      "org.eclipse.jdt.internal.compiler.batch.Main$ResourceBundleFactory",
      "org.hsqldb.jdbc.JDBCDriver",
      "org.eclipse.core.runtime.Assert",
      "org.eclipse.core.runtime.Path",
      "org.eclipse.jdt.internal.core.index.IndexLocation",
      "org.eclipse.jdt.internal.core.index.FileIndexLocation",
      "org.eclipse.jdt.internal.compiler.env.AccessRule",
      "org.eclipse.jdt.internal.core.ClasspathAccessRule",
      "org.eclipse.jdt.internal.compiler.CompilationResult$1",
      "org.eclipse.jdt.internal.compiler.CompilationResult",
      "org.eclipse.jdt.core.compiler.CategorizedProblem",
      "org.eclipse.jdt.internal.compiler.problem.DefaultProblem",
      "org.eclipse.jdt.internal.compiler.problem.AbortCompilation",
      "org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit",
      "org.eclipse.core.runtime.PlatformObject",
      "org.eclipse.jdt.internal.core.JavaElement",
      "org.eclipse.jdt.internal.core.Openable",
      "org.eclipse.jdt.internal.core.JavaModel",
      "org.eclipse.jdt.internal.core.ClasspathAttribute",
      "org.eclipse.core.runtime.Plugin",
      "org.eclipse.core.resources.ResourcesPlugin",
      "org.eclipse.osgi.util.NLS$1",
      "org.eclipse.osgi.util.NLS",
      "org.eclipse.osgi.util.NLS$2",
      "org.eclipse.osgi.util.NLS$MessagesProperties",
      "org.eclipse.osgi.internal.util.SupplementDebug",
      "org.eclipse.core.internal.utils.Messages",
      "org.eclipse.jdt.internal.core.ClasspathEntry"
    );
  }
}
