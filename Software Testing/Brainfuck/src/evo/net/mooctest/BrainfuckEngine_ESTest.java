/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 01 10:19:34 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.net.URI;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.util.Enumeration;
import java.util.Locale;
import net.mooctest.BrainfuckEngine;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BrainfuckEngine_ESTest extends BrainfuckEngine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BrainfuckEngine.Token brainfuckEngine_Token0 = new BrainfuckEngine.Token();
      BrainfuckEngine.Token brainfuckEngine_Token1 = new BrainfuckEngine.Token();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      byte[] byteArray0 = new byte[7];
      byteArray0[6] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte)56;
      byteArray0[5] = (byte) (-26);
      byteArray0[6] = (byte) (-1);
      brainfuckEngine0.data = byteArray0;
      char[] charArray0 = new char[0];
      brainfuckEngine0.interpret('>', charArray0);
      char[] charArray1 = new char[7];
      charArray1[0] = ']';
      charArray1[1] = ',';
      charArray1[3] = ',';
      charArray1[4] = '<';
      charArray1[5] = ']';
      charArray1[6] = ']';
      brainfuckEngine0.interpret('<', charArray1);
      brainfuckEngine0.interpret('[', charArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = 7;
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(7);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("C:\\Users\\Wycer\\AppData\\Local\\Temp\\>*(,_Z_0sz0>*(,_Z_0sz");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, " out of range.");
      brainfuckEngine0.interpret(">*(,_Z_0sz");
      byte[] byteArray0 = new byte[0];
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("C:\\Users\\Wycer\\AppData\\Local\\Temp");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, ">*(,_Z_0sz");
      brainfuckEngine0.data = byteArray0;
      File file0 = MockFile.createTempFile(">*(,_Z_0sz", ">*(,_Z_0sz");
      try { 
        brainfuckEngine0.interpret(file0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(7);
      char[] charArray0 = new char[4];
      brainfuckEngine0.data = null;
      charArray0[0] = '[';
      charArray0[0] = '[';
      charArray0[2] = '[';
      brainfuckEngine0.interpret('3', charArray0);
      charArray0[3] = '[';
      try { 
        brainfuckEngine0.interpret('[', charArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int int0 = 7;
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(7);
      String string0 = ">*(,_Z_0sz";
      brainfuckEngine0.interpret(">*(,_Z_0sz");
      try { 
        brainfuckEngine0.interpret(">*(,_Z_0sz");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated exception in System.in
         //
         verifyException("org.evosuite.runtime.util.SystemInUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(7);
      char[] charArray0 = new char[4];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '[';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte)42;
      brainfuckEngine0.data = byteArray0;
      charArray0[3] = '[';
      brainfuckEngine0.interpret('[', charArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Unable to get value for ");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2001);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(2001);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)34;
      brainfuckEngine0.data = byteArray0;
      brainfuckEngine0.interpret("t8[;qh?Xq{+7bp_W");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(7);
      char[] charArray0 = new char[4];
      charArray0[0] = '[';
      charArray0[1] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      try { 
        brainfuckEngine0.interpret('[', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(7, byteArrayOutputStream0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("C:\\Users\\Wycer\\AppData\\Local\\Temp\\>*(,_Z_0sz0>*(,_Z_0sz");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ">*(,_Z_0sz");
      byteArrayOutputStream0.write(7);
      brainfuckEngine0.initate(7);
      File file0 = MockFile.createTempFile(">*(,_Z_0sz", ">*(,_Z_0sz");
      brainfuckEngine0.interpret(file0);
      SystemInUtil.addInputLine(">*(,_Z_0sz");
      char[] charArray0 = new char[9];
      charArray0[0] = '*';
      charArray0[1] = '*';
      char[] charArray1 = new char[8];
      charArray1[0] = '*';
      charArray1[1] = '*';
      charArray1[2] = '-';
      charArray1[3] = '*';
      charArray1[4] = '-';
      charArray1[5] = '-';
      charArray1[6] = '-';
      charArray1[7] = '-';
      brainfuckEngine0.interpret('-', charArray1);
      brainfuckEngine0.interpret(file0);
      try { 
        brainfuckEngine0.interpret('[', charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BrainfuckEngine.Token brainfuckEngine_Token0 = new BrainfuckEngine.Token();
      BrainfuckEngine.Token brainfuckEngine_Token1 = new BrainfuckEngine.Token();
      SystemInUtil.addInputLine("");
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 748);
      InputStreamReader inputStreamReader0 = new InputStreamReader(bufferedInputStream0);
      brainfuckEngine0.consoleReader = inputStreamReader0;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-26);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte byte0 = (byte)52;
      char[] charArray0 = new char[1];
      char[] charArray1 = new char[1];
      charArray1[0] = '[';
      try { 
        brainfuckEngine0.interpret('.', charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("PREORDER");
      MockFile mockFile1 = new MockFile(mockFile0, "0R;9G$7n<,M2w-?e;fA");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile1);
      Locale locale0 = Locale.ENGLISH;
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) mockPrintStream0;
      objectArray0[1] = (Object) locale0;
      objectArray0[2] = (Object) mockFile0;
      PrintStream printStream0 = mockPrintStream0.printf(locale0, "", objectArray0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      BrainfuckEngine brainfuckEngine0 = null;
      try {
        brainfuckEngine0 = new BrainfuckEngine((-1718), dataOutputStream0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = null;
      try {
        brainfuckEngine0 = new BrainfuckEngine((-3422));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BrainfuckEngine.Token brainfuckEngine_Token0 = new BrainfuckEngine.Token();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      String string0 = "uTT?OU_= q";
      brainfuckEngine0.data = null;
      brainfuckEngine0.charPointer = 850;
      try { 
        brainfuckEngine0.interpret("uTT?OU_= q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 0;
      BrainfuckEngine brainfuckEngine0 = null;
      try {
        brainfuckEngine0 = new BrainfuckEngine(0, (OutputStream) null, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      char[] charArray0 = new char[7];
      brainfuckEngine0.initate(3071);
      brainfuckEngine0.lineCount = 3395;
      charArray0[0] = 'K';
      charArray0[1] = 'K';
      charArray0[2] = 'K';
      charArray0[3] = 'K';
      charArray0[4] = 'K';
      brainfuckEngine0.dataPointer = 0;
      brainfuckEngine0.lineCount = (-2109);
      charArray0[5] = 'K';
      charArray0[6] = 'K';
      brainfuckEngine0.interpret('K', charArray0);
      try { 
        brainfuckEngine0.interpret((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 106;
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(106);
      char char0 = '+';
      char[] charArray0 = null;
      brainfuckEngine0.interpret('+', (char[]) null);
      brainfuckEngine0.interpret('R', (char[]) null);
      InputStreamReader inputStreamReader0 = brainfuckEngine0.consoleReader;
      brainfuckEngine0.consoleReader = inputStreamReader0;
      brainfuckEngine0.charPointer = 0;
      // Undeclared exception!
      try { 
        inputStreamReader0.read((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("iqko31!F8:=S");
      mockFileOutputStream0.getChannel();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0, mockFileOutputStream0);
      brainfuckEngine0.interpret("iqko31!F8:=S");
      char[] charArray0 = new char[2];
      charArray0[0] = '^';
      brainfuckEngine0.lineCount = 0;
      charArray0[1] = ']';
      try { 
        brainfuckEngine0.interpret(']', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(";h1r>0}");
      mockFileOutputStream0.flush();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0, mockFileOutputStream0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'W';
      brainfuckEngine0.lineCount = 0;
      mockFileOutputStream0.close();
      charArray0[1] = 'W';
      charArray0[2] = 'W';
      charArray0[3] = 'W';
      charArray0[4] = 'W';
      char char0 = 'F';
      charArray0[5] = 'F';
      brainfuckEngine0.initate(1163);
      brainfuckEngine0.interpret('W', charArray0);
      brainfuckEngine0.initate(0);
      char char1 = 'C';
      try { 
        brainfuckEngine0.interpret(',', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(16, byteArrayOutputStream0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte) (-50);
      byteArray0[2] = (byte)56;
      byteArrayOutputStream0.write(byteArray0);
      // Undeclared exception!
      try { 
        brainfuckEngine0.initate((-443));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1265);
      brainfuckEngine0.charPointer = (-271);
      String string0 = "";
      try { 
        brainfuckEngine0.interpret("");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = (-40);
      MockPrintStream mockPrintStream0 = new MockPrintStream("Type arguments may not be primitive.");
      BrainfuckEngine brainfuckEngine0 = null;
      try {
        brainfuckEngine0 = new BrainfuckEngine((-40), mockPrintStream0, (InputStream) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("AUTHOR");
      mockFileOutputStream0.flush();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(88, mockFileOutputStream0);
      brainfuckEngine0.interpret("AUTHOR");
      char[] charArray0 = new char[5];
      charArray0[0] = '0';
      charArray0[1] = '0';
      mockFileOutputStream0.getChannel();
      charArray0[2] = '0';
      charArray0[3] = '0';
      charArray0[4] = '0';
      brainfuckEngine0.interpret('0', charArray0);
      brainfuckEngine0.interpret('0', charArray0);
      brainfuckEngine0.interpret(";+JZru>o| O");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int int0 = 7;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(7);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(7, byteArrayOutputStream0);
      brainfuckEngine0.lineCount = 2874;
      brainfuckEngine0.interpret(">*(,_Z_0sz");
      byte[] byteArray0 = new byte[0];
      byteArrayOutputStream0.write(7);
      brainfuckEngine0.initate(7);
      brainfuckEngine0.data = byteArray0;
      byteArrayOutputStream0.write(byteArray0);
      File file0 = MockFile.createTempFile(">*(,_Z_0sz", ">*(,_Z_0sz");
      try { 
        brainfuckEngine0.interpret(file0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BrainfuckEngine.Token brainfuckEngine_Token0 = new BrainfuckEngine.Token();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0, pipedOutputStream0);
      String string0 = ",column ";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("C:\\Users\\Wycer\\AppData\\Local\\Temp\\, column 0, column ");
      FileSystemHandling.createFolder(evoSuiteFile0);
      File file0 = null;
      MockFile.createTempFile(",column ", ",column ", (File) null);
      boolean boolean0 = true;
      char[] charArray0 = new char[3];
      charArray0[0] = '>';
      charArray0[1] = '-';
      charArray0[2] = '-';
      try { 
        brainfuckEngine0.interpret('<', charArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 0, column 0:data pointer (0) on postion 0 negative.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BrainfuckEngine.Token brainfuckEngine_Token0 = new BrainfuckEngine.Token();
      BrainfuckEngine.Token brainfuckEngine_Token1 = new BrainfuckEngine.Token();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-26);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)56;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-1);
      brainfuckEngine0.data = byteArray0;
      brainfuckEngine0.dataPointer = (-2113);
      try { 
        brainfuckEngine0.interpret("f=3*6(<e+dz");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 0, column 6:data pointer (-2113) on postion 6 negative.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 7;
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(7, byteArrayOutputStream0);
      brainfuckEngine0.interpret(">*(,_Z_0sz");
      byte[] byteArray0 = new byte[0];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("C:\\Users\\Wycer\\AppData\\Local\\Temp\\>*(,_Z_0sz0>*(,_Z_0sz");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ">*(,_Z_0sz");
      byteArrayOutputStream0.write(7);
      brainfuckEngine0.initate(7);
      brainfuckEngine0.data = byteArray0;
      byteArrayOutputStream0.write(byteArray0);
      File file0 = MockFile.createTempFile(">*(,_Z_0sz", ">*(,_Z_0sz");
      try { 
        brainfuckEngine0.interpret(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1, column 10:data pointer (0) on postion 0 out of range.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(7, byteArrayOutputStream0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("C:\\Users\\Wycer\\AppData\\Local\\Temp\\>*(,_Z_0sz0>*(,_Z_0sz");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ">*(,_Z_0sz");
      byteArrayOutputStream0.write(7);
      brainfuckEngine0.initate(7);
      File file0 = MockFile.createTempFile(">*(,_Z_0sz", ">*(,_Z_0sz");
      brainfuckEngine0.interpret(file0);
      char[] charArray0 = new char[9];
      charArray0[0] = '*';
      charArray0[1] = '*';
      char[] charArray1 = new char[8];
      charArray1[0] = '*';
      charArray1[1] = '*';
      charArray1[2] = '-';
      charArray1[3] = '*';
      charArray1[4] = '-';
      charArray1[5] = '-';
      charArray1[6] = '-';
      charArray1[7] = '-';
      brainfuckEngine0.interpret('-', charArray1);
      try { 
        brainfuckEngine0.interpret(file0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated exception in System.in
         //
         verifyException("org.evosuite.runtime.util.SystemInUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1);
      MockFile mockFile0 = new MockFile(";jEPV%k`hJvpT,", ") on postion ");
      MockFile mockFile1 = new MockFile(mockFile0, ") on postion ");
      File file0 = MockFile.createTempFile(") on postion ", ";jEPV%k`hJvpT,", (File) mockFile1);
      brainfuckEngine0.interpret(file0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(923);
      brainfuckEngine0.charPointer = 923;
      try { 
        brainfuckEngine0.interpret((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BrainfuckEngine.Token brainfuckEngine_Token0 = new BrainfuckEngine.Token();
      BrainfuckEngine.Token brainfuckEngine_Token1 = new BrainfuckEngine.Token();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-26);
      char[] charArray0 = new char[4];
      charArray0[0] = '>';
      charArray0[1] = ',';
      charArray0[2] = 'u';
      charArray0[3] = '[';
      try { 
        brainfuckEngine0.interpret('[', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BrainfuckEngine.Token brainfuckEngine_Token0 = new BrainfuckEngine.Token();
      BrainfuckEngine.Token brainfuckEngine_Token1 = new BrainfuckEngine.Token();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-26);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)56;
      byteArray0[5] = (byte)124;
      brainfuckEngine0.dataPointer = 327;
      byteArray0[6] = (byte)95;
      brainfuckEngine0.data = byteArray0;
      char[] charArray0 = new char[4];
      charArray0[0] = ']';
      charArray0[1] = '.';
      charArray0[2] = '[';
      charArray0[3] = ']';
      try { 
        brainfuckEngine0.interpret('>', charArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 0, column 0:data pointer (327) on postion 0 out of range.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1598);
      char[] charArray0 = new char[3];
      brainfuckEngine0.interpret("");
      brainfuckEngine0.initate(532);
      brainfuckEngine0.interpret('q', charArray0);
      try { 
        brainfuckEngine0.interpret(";`L]OVq&`+T'C@Mm");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BrainfuckEngine.Token brainfuckEngine_Token0 = new BrainfuckEngine.Token();
      BrainfuckEngine.Token brainfuckEngine_Token1 = new BrainfuckEngine.Token();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      byte[] byteArray0 = new byte[7];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte) (-26);
      byteArray0[6] = (byte)0;
      byteArray0[2] = (byte) (-26);
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte)56;
      byteArray0[5] = (byte) (-26);
      byteArray0[6] = (byte) (-1);
      brainfuckEngine0.data = byteArray0;
      char[] charArray0 = new char[0];
      brainfuckEngine0.interpret('>', charArray0);
      char[] charArray1 = new char[7];
      charArray1[0] = ']';
      charArray1[1] = ',';
      charArray1[2] = '+';
      charArray1[3] = ',';
      charArray1[4] = '<';
      charArray1[5] = 'a';
      charArray1[6] = ']';
      brainfuckEngine0.interpret('<', charArray1);
      try { 
        brainfuckEngine0.interpret("f=3*6(<e+dz");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 0, column 8:data pointer (0) on postion 6 negative.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("Unable to get value for ");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      PipedInputStream pipedInputStream0 = new PipedInputStream(2001);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1436, bufferedOutputStream0, pipedInputStream0);
      try { 
        brainfuckEngine0.interpret("t8[;qh?Xq{+7bp_W");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1598);
      char[] charArray0 = new char[3];
      brainfuckEngine0.interpret("=I?Xhsu(");
      brainfuckEngine0.initate(532);
      brainfuckEngine0.interpret('q', charArray0);
      brainfuckEngine0.interpret("EBaNn4jV\"V2f.R@");
      brainfuckEngine0.interpret('I', charArray0);
      byte[] byteArray0 = new byte[0];
      brainfuckEngine0.data = byteArray0;
      brainfuckEngine0.interpret('^', charArray0);
      brainfuckEngine0.interpret("");
      try { 
        brainfuckEngine0.interpret("IDB_>eLJfS!D|ff@U@$");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 0, column 31:data pointer (0) on postion 4 out of range.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      int int0 = 46;
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(46);
      String string0 = "kO`A/]eI";
      brainfuckEngine0.initate(46);
      try { 
        brainfuckEngine0.interpret("kO`A/]eI");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0, false);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(609, mockPrintStream0);
      brainfuckEngine0.interpret("com.github.javaparser.ast.stmt.LocalClassDeclarationStmt");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BrainfuckEngine.Token brainfuckEngine_Token0 = new BrainfuckEngine.Token();
      BrainfuckEngine.Token brainfuckEngine_Token1 = new BrainfuckEngine.Token();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-26);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)56;
      byteArray0[5] = (byte)124;
      brainfuckEngine0.dataPointer = 327;
      byteArray0[6] = (byte)95;
      brainfuckEngine0.data = byteArray0;
      try { 
        brainfuckEngine0.interpret("f=3*6(<e+dz");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 326
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(282);
      char[] charArray0 = new char[4];
      charArray0[0] = 'C';
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      charArray0[3] = 'C';
      brainfuckEngine0.interpret('C', charArray0);
      brainfuckEngine0.initate(282);
      try { 
        brainfuckEngine0.interpret("~uM|hZ_jd<>mW>>");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 0, column 10:data pointer (0) on postion 9 negative.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = 1;
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1);
      MockFile mockFile0 = new MockFile("6t[D5nu)yO|%<<", "o?p6]*)");
      MockFile.createTempFile(" out of rang>e.", " out of rang>e.", (File) mockFile0);
      try { 
        brainfuckEngine0.interpret(" out of rang>e.");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(202, (OutputStream) null);
      try { 
        brainfuckEngine0.interpret("com.github.javaparser.metamodel.ForStmtMetaModel");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(2466);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1450);
      brainfuckEngine0.lineCount = 2377;
      brainfuckEngine0.columnCount = 2377;
      brainfuckEngine0.interpret(":gxu\u0002W7'6kqES\"}DQ+");
      brainfuckEngine0.initate(93);
      brainfuckEngine0.initate(2377);
      brainfuckEngine0.charPointer = 93;
      brainfuckEngine0.interpret(":gxu\u0002W7'6kqES\"}DQ+");
      brainfuckEngine0.data = null;
      brainfuckEngine0.initate(213);
      brainfuckEngine0.interpret("F`\"YkH");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      BrainfuckEngine.Token brainfuckEngine_Token0 = new BrainfuckEngine.Token();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(sequenceInputStream0, 748);
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      char[] charArray0 = new char[1];
      try { 
        brainfuckEngine0.interpret('.', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(7);
      char[] charArray0 = new char[4];
      charArray0[0] = '[';
      charArray0[2] = '[';
      charArray0[3] = '[';
      try { 
        brainfuckEngine0.interpret('[', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(65);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      charArray0[1] = 'n';
      brainfuckEngine0.interpret('n', charArray0);
      brainfuckEngine0.interpret('n', charArray0);
      brainfuckEngine0.initate(78);
      try { 
        brainfuckEngine0.interpret(']', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(2001);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(2001);
      try { 
        brainfuckEngine0.interpret("t8[;qh?Xq{+7bp_W");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(4369);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(4369, byteArrayOutputStream0);
      brainfuckEngine0.interpret("?y%dHav-03");
      byte[] byteArray0 = new byte[0];
      brainfuckEngine0.initate(4369);
      brainfuckEngine0.data = byteArray0;
      byteArrayOutputStream0.write(byteArray0);
      brainfuckEngine0.initate(4369);
      char[] charArray0 = new char[2];
      charArray0[0] = '1';
      charArray0[1] = '1';
      brainfuckEngine0.interpret('1', charArray0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(7);
      brainfuckEngine0.interpret(">*(,_Z_0sz");
      byte[] byteArray0 = new byte[0];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("C:\\Users\\Wycer\\AppData\\Local\\Temp\\>*(,_Z_0sz0>*(,_Z_0sz");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, ">*(,_Z_0sz");
      brainfuckEngine0.data = byteArray0;
      File file0 = MockFile.createTempFile(">*(,_Z_0sz", ">*(,_Z_0sz");
      try { 
        brainfuckEngine0.interpret(file0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1, column 10:data pointer (0) on postion 0 out of range.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1598);
      String string0 = "J$NCZ;]o";
      try { 
        brainfuckEngine0.interpret("J$NCZ;]o");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      BrainfuckEngine.Token brainfuckEngine_Token0 = new BrainfuckEngine.Token();
      BrainfuckEngine.Token brainfuckEngine_Token1 = new BrainfuckEngine.Token();
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      byte[] byteArray0 = new byte[7];
      byteArray0[6] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[4] = (byte)56;
      byteArray0[6] = (byte) (-1);
      brainfuckEngine0.data = byteArray0;
      char[] charArray0 = new char[0];
      brainfuckEngine0.interpret('>', charArray0);
      char[] charArray1 = new char[7];
      charArray1[0] = ']';
      charArray1[1] = ',';
      charArray1[4] = '<';
      charArray1[5] = 'a';
      charArray1[6] = ']';
      brainfuckEngine0.interpret('<', charArray1);
      try { 
        brainfuckEngine0.interpret("f=3*6(<e+dz");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 0, column 8:data pointer (0) on postion 6 negative.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }
}
