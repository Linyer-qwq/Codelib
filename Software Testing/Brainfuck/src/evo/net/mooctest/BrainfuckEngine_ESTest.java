/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 30 17:40:49 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.SequenceInputStream;
import net.mooctest.BrainfuckEngine;
import org.eclipse.core.runtime.Path;
import org.eclipse.jdt.internal.core.util.ICacheEnumeration;
import org.eclipse.jdt.internal.core.util.LRUCache;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BrainfuckEngine_ESTest extends BrainfuckEngine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      byte[] byteArray0 = new byte[1];
      brainfuckEngine0.data = byteArray0;
      brainfuckEngine0.interpret("dKmLRt");
      try { 
        brainfuckEngine0.interpret("i$`\"+' PFn;Vbg-E<M");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 0, column 22:data pointer (0) on postion 16 negative.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(35);
      char[] charArray0 = new char[5];
      brainfuckEngine0.dataPointer = 91;
      brainfuckEngine0.interpret('<', charArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(79);
      char[] charArray0 = new char[7];
      brainfuckEngine0.interpret('>', charArray0);
      brainfuckEngine0.interpret('>', charArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1);
      brainfuckEngine0.interpret("wc0=");
      char[] charArray0 = new char[4];
      brainfuckEngine0.interpret('>', charArray0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1);
      brainfuckEngine0.dataPointer = 1;
      brainfuckEngine0.charPointer = 1;
      char[] charArray0 = new char[4];
      try { 
        brainfuckEngine0.interpret('>', charArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 0, column 0:data pointer (1) on postion 1 out of range.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1);
      char[] charArray0 = new char[4];
      brainfuckEngine0.interpret('>', charArray0);
      try { 
        brainfuckEngine0.interpret('>', charArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 0, column 1:data pointer (1) on postion 0 out of range.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(698917);
      brainfuckEngine0.charPointer = 698917;
      brainfuckEngine0.interpret("");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      byte[] byteArray0 = new byte[1];
      brainfuckEngine0.data = byteArray0;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Error on line ");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, brainfuckEngine0.data);
      Path path0 = new Path("Error on line ");
      File file0 = path0.toFile();
      brainfuckEngine0.interpret(file0);
      brainfuckEngine0.interpret(file0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      byte[] byteArray0 = new byte[1];
      brainfuckEngine0.data = byteArray0;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Error on line ");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, brainfuckEngine0.data);
      brainfuckEngine0.interpret("dKmLRt");
      Path path0 = new Path("Error on line ");
      File file0 = path0.toFile();
      brainfuckEngine0.interpret(file0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(35);
      brainfuckEngine0.initate(35);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Path path0 = Path.forWindows(".STNei-z?`@");
      File file0 = path0.toFile();
      MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
      LRUCache<InputStream, PipedInputStream> lRUCache0 = new LRUCache<InputStream, PipedInputStream>();
      ICacheEnumeration<InputStream, PipedInputStream> iCacheEnumeration0 = lRUCache0.keysAndValues();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(iCacheEnumeration0);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(213, mockPrintStream0, sequenceInputStream0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      brainfuckEngine0.charPointer = (-610);
      try { 
        brainfuckEngine0.interpret("W_qa-`(06RNl>|Ve");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(byteArrayOutputStream0, 871);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(871, bufferedOutputStream0);
      try { 
        brainfuckEngine0.interpret((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      try { 
        brainfuckEngine0.interpret(", column ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Error on line ");
      FileSystemHandling.appendDataToFile(evoSuiteFile0, brainfuckEngine0.data);
      brainfuckEngine0.charPointer = (int) (byte) (-93);
      Path path0 = new Path("Error on line ");
      File file0 = path0.toFile();
      try { 
        brainfuckEngine0.interpret(file0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(44);
      try { 
        brainfuckEngine0.interpret((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("\nNo Exports");
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(881, mockPrintStream0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MockFile mockFile0 = new MockFile("\nNo Exports");
      try { 
        brainfuckEngine0.interpret((File) mockFile0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated IOException
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1828);
      File file0 = MockFile.createTempFile(" negative.", " negative.", (File) null);
      try { 
        brainfuckEngine0.interpret(file0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("1M!,7gz,V|wR", false);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(985, objectOutputStream0);
      try { 
        brainfuckEngine0.interpret(']', (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(10);
      char[] charArray0 = new char[4];
      brainfuckEngine0.interpret(',', charArray0);
      try { 
        brainfuckEngine0.interpret(',', charArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Simulated exception in System.in
         //
         verifyException("org.evosuite.runtime.util.SystemInUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("e");
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(60, mockPrintStream0);
      // Undeclared exception!
      try { 
        brainfuckEngine0.initate((-1610612219));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      BrainfuckEngine brainfuckEngine0 = null;
      try {
        brainfuckEngine0 = new BrainfuckEngine(0, byteArrayOutputStream0, (InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("-<D+HR@v4", false);
      BrainfuckEngine brainfuckEngine0 = null;
      try {
        brainfuckEngine0 = new BrainfuckEngine((-382), mockFileOutputStream0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = null;
      try {
        brainfuckEngine0 = new BrainfuckEngine((-1945));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1);
      char[] charArray0 = new char[4];
      brainfuckEngine0.interpret('>', charArray0);
      brainfuckEngine0.interpret('<', charArray0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(35);
      char[] charArray0 = new char[5];
      brainfuckEngine0.interpret('3', charArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1);
      char[] charArray0 = new char[4];
      try { 
        brainfuckEngine0.interpret('<', charArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 0, column 0:data pointer (0) on postion 0 negative.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(44);
      brainfuckEngine0.interpret('.', (char[]) null);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1);
      brainfuckEngine0.charPointer = 1;
      char[] charArray0 = new char[4];
      charArray0[0] = ']';
      try { 
        brainfuckEngine0.interpret(']', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1);
      char[] charArray0 = new char[21];
      charArray0[0] = '[';
      charArray0[3] = ']';
      brainfuckEngine0.interpret('[', charArray0);
      brainfuckEngine0.interpret(']', charArray0);
      try { 
        brainfuckEngine0.interpret('[', charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 21
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("\nNo Exports");
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(881, mockPrintStream0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("\nNo Exports");
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)60;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      MockFile mockFile0 = new MockFile("\nNo Exports");
      try { 
        brainfuckEngine0.interpret((File) mockFile0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error on line 1, column 2:data pointer (0) on postion 2 negative.
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1);
      char[] charArray0 = new char[4];
      brainfuckEngine0.interpret('-', charArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(10);
      char[] charArray0 = new char[4];
      brainfuckEngine0.interpret(',', charArray0);
      brainfuckEngine0.interpret('[', charArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(1094);
      char[] charArray0 = new char[1];
      brainfuckEngine0.interpret('+', charArray0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      BrainfuckEngine.Token brainfuckEngine_Token0 = new BrainfuckEngine.Token();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = new BrainfuckEngine(0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("Error on line ");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "u.^}2");
      Path path0 = new Path("Error on line ");
      File file0 = path0.toFile();
      try { 
        brainfuckEngine0.interpret(file0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      BrainfuckEngine brainfuckEngine0 = null;
      try {
        brainfuckEngine0 = new BrainfuckEngine((-1201), (OutputStream) null, (InputStream) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("net.mooctest.BrainfuckEngine", e);
      }
  }
}
