/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 31 05:24:06 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import net.mooctest.Variable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Variable_ESTest extends Variable_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Variable.removeVariable("");
      boolean boolean0 = Variable.addVariable("&");
      assertTrue(boolean0);
      
      int int0 = Variable.getVariableValue("&");
      assertEquals(0, int0);
      
      Variable.setVariableValue("&", 0);
      Variable.removeVariable("&");
      Variable.setVariableValue("l", 0);
      Variable.setVariableValue("&", 0);
      boolean boolean1 = Variable.addVariable("l");
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      int int1 = Variable.getVariableValue("");
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      
      boolean boolean2 = Variable.addVariable("&");
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2);
      
      Variable.setVariableValue("", (-1453));
      int int2 = Variable.getVariableValue("");
      assertTrue(int2 == int0);
      assertTrue(int2 == int1);
      assertEquals(0, int2);
      
      Variable.setVariableValue("", 0);
      int int3 = Variable.getVariableValue("&");
      assertTrue(int3 == int1);
      assertTrue(int3 == int2);
      assertTrue(int3 == int0);
      assertEquals(0, int3);
      
      int int4 = Variable.getVariableValue("");
      assertTrue(int4 == int1);
      assertTrue(int4 == int2);
      assertTrue(int4 == int0);
      assertTrue(int4 == int3);
      assertEquals(0, int4);
      
      boolean boolean3 = Variable.addVariable("&");
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3);
      
      boolean boolean4 = Variable.addVariable("");
      assertTrue(boolean4 == boolean3);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4);
      
      Variable.setVariableValue("", (-1453));
      boolean boolean5 = Variable.addVariable("");
      assertFalse(boolean5 == boolean2);
      assertFalse(boolean5 == boolean1);
      assertFalse(boolean5 == boolean0);
      assertFalse(boolean5 == boolean4);
      assertFalse(boolean5 == boolean3);
      assertFalse(boolean5);
      
      boolean boolean6 = Variable.addVariable("");
      assertFalse(boolean6 == boolean4);
      assertFalse(boolean6 == boolean0);
      assertFalse(boolean6 == boolean2);
      assertFalse(boolean6 == boolean3);
      assertTrue(boolean6 == boolean5);
      assertFalse(boolean6 == boolean1);
      assertFalse(boolean6);
      
      Variable.removeVariable("*");
      // Undeclared exception!
      try { 
        Variable.getVariableValue("&");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "";
      int int0 = Variable.getVariableValue("");
      assertEquals(1690, int0);
      
      int int1 = Variable.getVariableValue("");
      assertTrue(int1 == int0);
      assertEquals(1690, int1);
      
      Variable.setVariableValue("", 1690);
      Variable.setVariableValue("", 1690);
      Variable.setVariableValue("", 1690);
      Variable.setVariableValue("", (-1094));
      Variable.setVariableValue("", (-14));
      int int2 = Variable.getVariableValue("");
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals((-14), int2);
      
      int int3 = Variable.getVariableValue("");
      assertTrue(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertEquals((-14), int3);
      
      // Undeclared exception!
      try { 
        Variable.setVariableValue("&", (-14));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "&";
      // Undeclared exception!
      try { 
        Variable.getVariableValue("&");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Variable.setVariableValue("^", 435);
      int int0 = Variable.getVariableValue(">a6l]36xlB");
      assertEquals(0, int0);
      
      Variable.removeVariable(">a6l]36xlB");
      String string0 = "";
      boolean boolean0 = Variable.addVariable("");
      assertFalse(boolean0);
      
      boolean boolean1 = Variable.addVariable("");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string1 = "&";
      int int1 = 0;
      // Undeclared exception!
      try { 
        Variable.setVariableValue("&", 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int int0 = Variable.getVariableValue("sX");
      assertEquals(0, int0);
      
      int int1 = Variable.getVariableValue("}N");
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      
      Variable.removeVariable("sX");
      // Undeclared exception!
      try { 
        Variable.setVariableValue("&", 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Variable.setVariableValue("*", 0);
      Variable.removeVariable("Ow");
      int int0 = Variable.getVariableValue("[^dL]o1V%~O2a(tD");
      assertEquals(0, int0);
      
      Variable.removeVariable("Ow");
      int int1 = Variable.getVariableValue("*");
      assertFalse(int1 == int0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = Variable.getVariableValue("net.mooctest.Variable");
      assertEquals(0, int0);
      
      Variable.removeVariable("");
      int int1 = Variable.getVariableValue("");
      assertTrue(int1 == int0);
      assertEquals(0, int1);
      
      boolean boolean0 = Variable.addVariable("");
      assertTrue(boolean0);
      
      String string0 = "";
      Variable.removeVariable("");
      // Undeclared exception!
      try { 
        Variable.removeVariable((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        Variable.addVariable((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Variable.setVariableValue("K2nR }", 0);
      Variable.removeVariable("K2nR }");
      String string0 = null;
      // Undeclared exception!
      try { 
        Variable.setVariableValue((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        Variable.getVariableValue((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Variable.setVariableValue("", (-1677499287));
      Variable.removeVariable("");
      Variable.addVariable("");
      Variable.setVariableValue("", (-1677499287));
      boolean boolean0 = Variable.addVariable("");
      Variable.removeVariable("");
      Variable.getVariableValue("");
      Variable.getVariableValue("");
      Variable.addVariable("`CCw(@[");
      Variable.getVariableValue("");
      Variable.getVariableValue("%;PI>qe;@TPVkLP");
      boolean boolean1 = Variable.addVariable("68xNsroO$g(5w?");
      assertFalse(boolean1 == boolean0);
      
      Variable.removeVariable("`CCw(@[");
      Variable.removeVariable("&");
      Variable.getVariableValue("{Cz7*l");
      Variable.removeVariable("");
      Variable.removeVariable("{Cz7*l");
      Variable.addVariable("{Cz7*l");
      Variable.getVariableValue("%;PI>qe;@TPVkLP");
      Variable.setVariableValue("`CCw(@[", 0);
      Variable.getVariableValue("68xNsroO$g(5w?");
      int int0 = Variable.getVariableValue("l_bLcBo<");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Variable.addVariable("&");
      Variable.setVariableValue("&", (-1));
      Variable.addVariable("");
      Variable.addVariable("");
      Variable.removeVariable("");
      Variable.setVariableValue("&", 0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = "kn6BPb~[&@d]r%3!kUo";
      Variable.getVariableValue("kn6BPb~[&@d]r%3!kUo");
      Variable.setVariableValue("kn6BPb~[&@d]r%3!kUo", 0);
      Variable.addVariable("1o>2LXpM[Kw{p|]M(");
      Variable.setVariableValue("1o>2LXpM[Kw{p|]M(", 0);
      Variable.setVariableValue("j", 0);
      Variable.addVariable("net.mooctest.Variable");
      Variable.addVariable("kn6BPb~[&@d]r%3!kUo");
      String string1 = null;
      // Undeclared exception!
      try { 
        Variable.addVariable((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Variable.removeVariable("2~HR/Y`");
      // Undeclared exception!
      try { 
        Variable.addVariable((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Variable.removeVariable("");
      Variable.getVariableValue("");
      Variable.setVariableValue("\"<", 0);
      Variable.addVariable("T~U;7?]@xtjr87i<%");
      Variable.removeVariable("kob@L,v43h>z[");
      Variable.setVariableValue("kob@L,v43h>z[", (-2261));
      Variable.removeVariable("kob@L,v43h>z[");
      Variable.addVariable("");
      Variable.addVariable("");
      Variable.addVariable("T~U;7?]@xtjr87i<%");
      Variable.removeVariable("T~U;7?]@xtjr87i<%");
      Variable.removeVariable("kob@L,v43h>z[");
      Variable.getVariableValue("T~U;7?]@xtjr87i<%");
      Variable.addVariable("");
      Variable.setVariableValue("s", (-1320));
      Variable.getVariableValue("");
      // Undeclared exception!
      try { 
        Variable.setVariableValue((String) null, 718);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Variable.getVariableValue(",@ly0%US^y");
      Variable.removeVariable(",@ly0%US^y");
      boolean boolean0 = Variable.addVariable("oaT6*");
      assertTrue(boolean0);
      
      int int0 = Variable.getVariableValue("oaT6*");
      assertEquals(0, int0);
      
      Variable.getVariableValue("6,]4apOus?m");
      Variable.removeVariable("");
      Variable.removeVariable("zq!xuD#");
      Variable.addVariable("zq!xuD#");
      Variable.getVariableValue("zq!xuD#");
      Variable.setVariableValue("oaT6*", 0);
      Variable.getVariableValue("");
      Variable.setVariableValue("", (-1));
      Variable.getVariableValue("");
      Variable.getVariableValue("Ohfd@f,SJSsa0QEOwri");
      Variable.getVariableValue(",@ly0%US^y");
      Variable.getVariableValue("jK 2,:_(4:S45h%*");
      int int1 = Variable.getVariableValue("oaT6*");
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Variable.getVariableValue("");
      Variable.addVariable("DNv*~l QIcEUN:N@|I");
      Variable.getVariableValue("du,t?F^wX+P*Vz1N)w?");
      Variable.setVariableValue("", 2005);
      Variable.getVariableValue("");
      Variable.addVariable("du,t?F^wX+P*Vz1N)w?");
      Variable.removeVariable("DN0PPpl}Q");
      Variable.getVariableValue("*");
      Variable.removeVariable("net.mooctest.Variable");
      Variable.getVariableValue("DNv*~l QIcEUN:N@|I");
      Variable.setVariableValue("}f/b]", 2141);
      Variable.addVariable("");
      Variable.removeVariable("");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Variable.addVariable("");
      Variable.removeVariable("&14_!)P*5n Z");
      Variable.setVariableValue("zMsv ba3rS<xiv$5\u0006!", 3117);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Variable.getVariableValue("AOP2Rk69F;lM>\"");
      Variable.setVariableValue("6$Pf3EIJM-.K", 0);
      Variable.setVariableValue("6$Pf3EIJM-.K", 0);
      Variable.addVariable("*");
      String string0 = "mOs$v a;ae;ya:P\"";
      int int0 = 0;
      Variable.setVariableValue("mOs$v a;ae;ya:P\"", 0);
      String string1 = "";
      Variable.addVariable("");
      String string2 = "|!6Q{R*lq";
      Variable.getVariableValue("|!6Q{R*lq");
      Variable.getVariableValue("*");
      String string3 = "net.mooctest.Variable";
      Variable.removeVariable("net.mooctest.Variable");
      Variable.getVariableValue("6$Pf3EIJM-.K");
      Variable.addVariable("|!6Q{R*lq");
      // Undeclared exception!
      try { 
        Variable.removeVariable((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
